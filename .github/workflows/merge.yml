name: CI - Merge into main
# Workflow to be triggered from a different branch than main

on:
  repository_dispatch:
  workflow_dispatch:
      inputs:
          version:
              description: 'Google Sheet metadata file version asking for Sync'
              required: false
              type: string

jobs:
  createPullRequest:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
          commit-message: Merge last schema models build from ${GITHUB_REF##*/} branch
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          signoff: false
          branch: main
          delete-branch: false
          title: 'Merge from staging'
          body: |
            Merge report including last schema models based on updated metadata google sheet version ${{inputs.version}} 
            - Merged with *today's* date
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            report
            automated pr
          assignees: Angatar
          reviewers: Angatar
          team-reviewers: |
            developers
            qa-team
          milestone: 1
          draft: false

      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        run: gh pr merge --merge --auto "1"
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}

      - name: Auto approve
        if: steps.cpr.outputs.pull-request-operation == 'created'
        run: gh pr review --approve "${{ steps.cpr.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
